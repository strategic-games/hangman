{"Structs/State/WriteOptions.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"WriteOptions"},"Structs/State/WriteOptions.html#/s:9Begriffix5StateV12WriteOptionsV10horizontalAEvpZ":{"name":"horizontal","abstract":"<p>Words may be written horizontally</p>","parent_name":"WriteOptions"},"Structs/State/WriteOptions.html#/s:9Begriffix5StateV12WriteOptionsV8verticalAEvpZ":{"name":"vertical","abstract":"<p>Words may be written vertically</p>","parent_name":"WriteOptions"},"Structs/State/WriteOptions.html#/s:9Begriffix5StateV12WriteOptionsV12includeThreeAEvpZ":{"name":"includeThree","abstract":"<p>Words may consist of at least three letters (four otherwise)</p>","parent_name":"WriteOptions"},"Structs/State/WriteOptions.html#/s:9Begriffix5StateV12WriteOptionsV3allAEvpZ":{"name":"all","abstract":"<p>Any direction is allowed and words may be short (3 letters)</p>","parent_name":"WriteOptions"},"Structs/State/Phase.html#/s:9Begriffix5StateV5PhaseO10RestrictedyA2EmF":{"name":"Restricted","abstract":"<p>Players must write words with at least four characters, player 0 must write horizontally, and player 1 must write vertically</p>","parent_name":"Phase"},"Structs/State/Phase.html#/s:9Begriffix5StateV5PhaseO7LiberalyA2EmF":{"name":"Liberal","abstract":"<p>Any words and directions are allowed</p>","parent_name":"Phase"},"Structs/State/Phase.html#/s:9Begriffix5StateV5PhaseO8KnockOutyA2EmF":{"name":"KnockOut","abstract":"<p>not yet implemented</p>","parent_name":"Phase"},"Structs/State.html#/s:9Begriffix5StateV6Entitya":{"name":"Entity","abstract":"<p>The value type that the board accepts</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV5Boarda":{"name":"Board","abstract":"<p>The type of the board container that holds the entered values</p>","parent_name":"State"},"Structs/State/Phase.html":{"name":"Phase","abstract":"<p>game phases depending on the progress</p>","parent_name":"State"},"Structs/State/WriteOptions.html":{"name":"WriteOptions","abstract":"<p>An option set that determines which words are acceptable</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV12startLettersAA6MatrixVySJSgGvpZ":{"name":"startLetters","abstract":"<p>Letters that are written in the center of a board</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV16createStartBoardAA6MatrixVySJSgGyFZ":{"name":"createStartBoard()","abstract":"<p>Create a new starting board</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV5boardAA6MatrixVySJSgGvp":{"name":"board","abstract":"<p>The board holding the written letters</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV14numericalBoardAA6MatrixVySiGvp":{"name":"numericalBoard","abstract":"<p>The board as numeric representation (filled = 1, empty = 0)</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV4turnSivp":{"name":"turn","abstract":"<p>The turn counter</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV6playerSbvp":{"name":"player","abstract":"<p>The current player who has to deal with this state</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV10isPristineSbvp":{"name":"isPristine","abstract":"<p>Is this an untouched game state?</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV5phaseAC5PhaseOvp":{"name":"phase","abstract":"<p>The current game phase which is derived from turn</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV7optionsAC12WriteOptionsVvp":{"name":"options","abstract":"<p>The possible writing options, derived from phase and player</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateVACycfc":{"name":"init()","abstract":"<p>Initialize a pristine game state</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV4turn6player5boardACSi_SbAA6MatrixVySJSgGtcfc":{"name":"init(turn:player:board:)","abstract":"<p>Initialize a new state from given properties</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV4base4moveA2C_AA4MoveVtcfc":{"name":"init(base:move:)","abstract":"<p>Initialize a new state based on a given state by merging a user action</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV1poiyA2C_AA4MoveVtFZ":{"name":"+(_:_:)","abstract":"<p>Create a new state from a given base state and a player action</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV4scan9direction5countSayAA8PositionVGAA9DirectionO_SitF":{"name":"scan(direction:count:)","abstract":"<p>Undocumented</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV12noCollisions1p3dir5countSbAA8PositionV_AA9DirectionOSitF":{"name":"noCollisions(p:dir:count:)","abstract":"<p>Undocumented</p>","parent_name":"State"},"Structs/State.html#/s:9Begriffix5StateV5words_5linesSaySaySSGGAA9DirectionO_SnySiGSgtF":{"name":"words(_:lines:)","abstract":"<p>Return the words written on the board</p>","parent_name":"State"},"Structs/Position.html#/s:9Begriffix8PositionV1iSivp":{"name":"i","abstract":"<p>The matrix indices for row (i) and column (j)</p>","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionV1jSivp":{"name":"j","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create a position with given indices</p>","parent_name":"Position"},"Structs/Move.html#/s:9Begriffix4MoveV5startAA8PositionVvp":{"name":"start","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV9directionAA9DirectionOvp":{"name":"direction","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV4wordSSvp":{"name":"word","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV3sumSivp":{"name":"sum","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV5countSivp":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV9positionsSayAA8PositionVGyF":{"name":"positions()","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV6kernelAA6MatrixVySiGyF":{"name":"kernel()","abstract":"<p>Undocumented</p>","parent_name":"Move"},"Structs/Move.html#/s:9Begriffix4MoveV5linesSnySiGyF":{"name":"lines()","abstract":"<p>Return the range of lines that would be crossed by this move</p>","parent_name":"Move"},"Structs/Matrix.html#/s:9Begriffix6MatrixV14CollectionTypea":{"name":"CollectionType","abstract":"<p>The type of the collection which is used internally for the matrix entries</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4Sizea":{"name":"Size","abstract":"<p>A type which keeps track of matrix dimensions and 1D indices</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4sizeAA10DimensionsVvp":{"name":"size","abstract":"<p>The matrix dimensions</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyACyxGSaySayxGGcfc":{"name":"init(_:)","abstract":"<p>Create matrix from nested arrays</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV9repeating4sizeACyxGx_AA10DimensionsVtcfc":{"name":"init(repeating:size:)","abstract":"<p>Create matrix with given size and prefill with repeating value</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV_4sizeACyxGSayxG_AA10DimensionsVtcfc":{"name":"init(_:size:)","abstract":"<p>Create matrix from simple array and given size</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5Indexa":{"name":"Index","abstract":"<p>The collection index type</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV8endIndexSivp":{"name":"endIndex","abstract":"<p>The last 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyxSicip":{"name":"subscript(_:)","abstract":"<p>Access a matrix element at a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Return the 1D index after a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5index6beforeS2i_tF":{"name":"index(before:)","abstract":"<p>Return the 1D index before a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyxAA8PositionVcip":{"name":"subscript(_:)","abstract":"<p>Return the matrix element at a given position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV3rows5SliceVyACyxGGSi_tcip":{"name":"subscript(row:)","abstract":"<p>Return the elements in a given matrix row as slice</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV6columnSayxGSi_tcip":{"name":"subscript(column:)","abstract":"<p>Return the elements at a given column index as array</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVySays5SliceVyACyxGGGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with a given size and reference position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyACyxGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with given size and start position as matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVySayxGAA8PositionV_AA9DirectionOSitcip":{"name":"subscript(_:_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4map2yACyqd__Gqd__xXESHRd__lF":{"name":"map2(_:)","abstract":"<p>Undocumented</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE1moiyACyxGAE_AEtFZ":{"name":"*(_:_:)","abstract":"<p>Elementwise matrix multiplication</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE5conv2yACyxGAEF":{"name":"conv2(_:)","abstract":"<p>2D convolution with numeric elements</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6extendyACyxGAEF":{"name":"extend(_:)","abstract":"<p>Extend conv2 matrix with a given kernel</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6dilateyACyxGAEF":{"name":"dilate(_:)","abstract":"<p>Extend and dilate conv2 matrix with a given kernel</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6invert3maxACyxGx_tF":{"name":"invert(max:)","abstract":"<p>Recode the matrix values by subtracting them from a given maximum value</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlE11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of a game board</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlEyACyADGSgSScfc":{"name":"init(_:)","abstract":"<p>Create a game matrix from a string</p>","parent_name":"Matrix"},"Structs/Game.html#/s:ST7ElementQa":{"name":"Element","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameV7starterAA6PlayerCvp":{"name":"starter","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameV8opponentAA6PlayerCvp":{"name":"opponent","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameV5stateAA5StateVvp":{"name":"state","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameV5endedSbvp":{"name":"ended","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameV6playerAA6PlayerCvp":{"name":"player","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:9Begriffix4GameVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"Game"},"Structs/Game.html#/s:St4next7ElementQzSgyF":{"name":"next()","parent_name":"Game"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1mSivp":{"name":"m","abstract":"<p>The number of rows (m) and columns (n) in the matrix</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1nSivp":{"name":"n","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5countSivp":{"name":"count","abstract":"<p>The number of elements in a grid with this size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create dimensions with given extends</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyACSicfc":{"name":"init(_:)","abstract":"<p>Create a size for a square shaped grid with a given sidelength</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyAcA9DirectionO_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV8containsySbAA8PositionVF":{"name":"contains(_:)","abstract":"<p>Indicates if the given position is in the matrix bounds</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5indexySiAA8PositionVF":{"name":"index(_:)","abstract":"<p>Return the 1D index corresponding to a grid position</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index3rowSnySiGSi_tF":{"name":"index(row:)","abstract":"<p>Return the 1D indices of a given row index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index6columns8StrideToVySiGSi_tF":{"name":"index(column:)","abstract":"<p>Return the 1D indices of a given column index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index_4sizeSaySnySiGGAA8PositionV_ACtF":{"name":"index(_:size:)","abstract":"<p>Return the corresponding 1D indices of a partial grid with a given size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV8positionyAA8PositionVSiF":{"name":"position(_:)","abstract":"<p>Return a 2D grid position corresponding to a 1D index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV9enumerateyyyAA8PositionVXEF":{"name":"enumerate(_:)","abstract":"<p>Loop through all row and column indices and execute a closure with the positions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Indicates if a grid size fits into another grid size","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Add two dimensions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract a dimension from another</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Add a dimension and a scalar</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Dimensions"},"Structs/Dimensions.html":{"name":"Dimensions","abstract":"<p>The size of a 2D grid</p>"},"Structs/Game.html":{"name":"Game","abstract":"<p>Undocumented</p>"},"Structs/Matrix.html":{"name":"Matrix","abstract":"<p>A generic matrix type</p>"},"Structs/Move.html":{"name":"Move","abstract":"<p>Undocumented</p>"},"Structs/Position.html":{"name":"Position","abstract":"<p>A position in a matrix</p>"},"Structs/State.html":{"name":"State","abstract":"<p>The state of a Begriffix game</p>"},"Extensions/RandomAccessCollection.html#/s:Sk9BegriffixSJSg7ElementRtzrlE4word6aroundSSSg5IndexQz_tF":{"name":"word(around:)","abstract":"<p>Undocumented</p>","parent_name":"RandomAccessCollection"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE3sumACyF":{"name":"sum()","abstract":"<p>Return the sum of all elements in a numeric sequence</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE1moiySayACGx_xtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE7prodSum3lhs3rhsACx_xtFZ":{"name":"prodSum(lhs:rhs:)","abstract":"<p>Undocumented</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSJSg7ElementRtzrlE5wordsSaySSGyF":{"name":"words()","abstract":"<p>Undocumented</p>","parent_name":"Sequence"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions/RandomAccessCollection.html":{"name":"RandomAccessCollection"},"Enums/Direction.html#/s:9Begriffix9DirectionO10HorizontalyA2CmF":{"name":"Horizontal","abstract":"<p>Undocumented</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO8VerticalyA2CmF":{"name":"Vertical","abstract":"<p>Undocumented</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO6kernelyAA6MatrixVySiGSiF":{"name":"kernel(_:)","abstract":"<p>Undocumented</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO7toggledACyF":{"name":"toggled()","abstract":"<p>Undocumented</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO6toggleyyF":{"name":"toggle()","abstract":"<p>Undocumented</p>","parent_name":"Direction"},"Enums/Direction.html":{"name":"Direction","abstract":"<p>Undocumented</p>"},"Classes/Player/Place.html#/s:9Begriffix6PlayerC5PlaceV5startAA8PositionVvp":{"name":"start","abstract":"<p>Undocumented</p>","parent_name":"Place"},"Classes/Player/Place.html#/s:9Begriffix6PlayerC5PlaceV9directionAA9DirectionOvp":{"name":"direction","abstract":"<p>Undocumented</p>","parent_name":"Place"},"Classes/Player/Place.html#/s:9Begriffix6PlayerC5PlaceV5wordsSaySSGvp":{"name":"words","abstract":"<p>Undocumented</p>","parent_name":"Place"},"Classes/Player/Place.html":{"name":"Place","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC4dictShySSGvpZ":{"name":"dict","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC5radix7HangMan5RadixCvpZ":{"name":"radix","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC8loadDictyShySSGSgSSFZ":{"name":"loadDict(_:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC11createRadix7HangMan0D0CyFZ":{"name":"createRadix()","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC4deal4withAA4MoveVSgAA5StateV_tF":{"name":"deal(with:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC14dealRestricted4withAA4MoveVSgAA5StateV_tF":{"name":"dealRestricted(with:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC11dealLiberal4withAA4MoveVSgAA5StateV_tF":{"name":"dealLiberal(with:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC5match5state5start3dir5countSaySSGAA5StateV_AA8PositionVAA9DirectionOSitF":{"name":"match(state:start:dir:count:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC8validate_4withSbAA5StateV_AA4MoveVtF":{"name":"validate(_:with:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html#/s:9Begriffix6PlayerC6select4fromAA4MoveVSgSayAC5PlaceVG_tF":{"name":"select(from:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Classes/Player.html":{"name":"Player","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}