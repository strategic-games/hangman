{"Structs/RandomPlayer.html#/s:9Begriffix12RandomPlayerV10vocabulary7HangMan5RadixVvp":{"name":"vocabulary","abstract":"<p>The player&rsquo;s vocabulary</p>","parent_name":"RandomPlayer"},"Structs/RandomPlayer.html#/s:9Begriffix12RandomPlayerV10vocabularyAC7HangMan5RadixV_tcfc":{"name":"init(vocabulary:)","abstract":"<p>Initialize a new player with a given vocabulary</p>","parent_name":"RandomPlayer"},"Structs/RandomPlayer.html#/s:9Begriffix12RandomPlayerV4deal4withA2AV4MoveVSgAF_tF":{"name":"deal(with:)","abstract":"<p>Undocumented</p>","parent_name":"RandomPlayer"},"Structs/RandomPlayer.html#/s:9Begriffix12RandomPlayerV5match_5placeSaySSGA2AV_AA5PlaceVtF":{"name":"match(_:place:)","abstract":"<p>Find the words that could be inserted at the given place</p>","parent_name":"RandomPlayer"},"Structs/RandomPlayer.html#/s:9Begriffix12RandomPlayerV6select4fromA2AV4MoveVSgSDyAA5PlaceVSaySSGG_tF":{"name":"select(from:)","abstract":"<p>Select a move from valid places and their words</p>","parent_name":"RandomPlayer"},"Structs/Position.html#/s:9Begriffix8PositionV1iSivp":{"name":"i","abstract":"<p>The matrix indices for row (i) and column (j)</p>","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionV1jSivp":{"name":"j","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create a position with given indices</p>","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionV11descriptionSSvp":{"name":"description","abstract":"<p>A textual representation as i:j</p>","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Initialize a position from a description</p>","parent_name":"Position"},"Structs/Position.html#/s:9Begriffix8PositionV12arrayLiteralACSid_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Initialize a position from an array literal with 2 elements</p>","parent_name":"Position"},"Structs/Place.html#/s:9Begriffix5PlaceV5startAA8PositionVvp":{"name":"start","abstract":"<p>The 2D position where the word starts</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV9directionAA9DirectionOvp":{"name":"direction","abstract":"<p>The writing direction</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV5countSivp":{"name":"count","abstract":"<p>The word length</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV5start9direction5countAcA8PositionV_AA9DirectionOSitcfc":{"name":"init(start:direction:count:)","abstract":"<p>Return all positions that this place would occupy on a board</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV9positionsSayAA8PositionVGyF":{"name":"positions()","abstract":"<p>Undocumented</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV6kernelAA6MatrixVySiGyF":{"name":"kernel()","abstract":"<p>Return a matrix according to this place in direction and length</p>","parent_name":"Place"},"Structs/Place.html#/s:9Begriffix5PlaceV5linesSnySiG_SityF":{"name":"lines()","abstract":"<p>Return the range of lines that would be crossed by this place</p>","parent_name":"Place"},"Structs/Matrix.html#/s:9Begriffix6MatrixV14CollectionTypea":{"name":"CollectionType","abstract":"<p>The type of the collection which is used internally for the matrix entries</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4Sizea":{"name":"Size","abstract":"<p>A type which keeps track of matrix dimensions and 1D indices</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4sizeAA10DimensionsVvp":{"name":"size","abstract":"<p>The matrix dimensions</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyACyxGSaySayxGGcfc":{"name":"init(_:)","abstract":"<p>Create matrix from nested arrays</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV9repeating4sizeACyxGx_AA10DimensionsVtcfc":{"name":"init(repeating:size:)","abstract":"<p>Create matrix with given size and prefill with repeating value</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV_4sizeACyxGSayxG_AA10DimensionsVtcfc":{"name":"init(_:size:)","abstract":"<p>Create matrix from simple array and given size</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5Indexa":{"name":"Index","abstract":"<p>The collection index type</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV8endIndexSivp":{"name":"endIndex","abstract":"<p>The last 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyxSicip":{"name":"subscript(_:)","abstract":"<p>Access a matrix element at a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Return the 1D index after a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV5index6beforeS2i_tF":{"name":"index(before:)","abstract":"<p>Return the 1D index before a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyxAA8PositionVcip":{"name":"subscript(_:)","abstract":"<p>Return the matrix element at a given position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV3rows5SliceVyACyxGGSi_tcip":{"name":"subscript(row:)","abstract":"<p>Return the elements in a given matrix row as slice</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV6columnSayxGSi_tcip":{"name":"subscript(column:)","abstract":"<p>Return the elements at a given column index as array</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVySays5SliceVyACyxGGGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with a given size and reference position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVyACyxGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with given size and start position as matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVySayxGAA5PlaceVcip":{"name":"subscript(_:)","abstract":"<p>Subscript a matrix with given place</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixV4map2yACyqd__Gqd__xXESHRd__lF":{"name":"map2(_:)","abstract":"<p>Transform the matrix element with a given closure and return them as new matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE1moiyACyxGAE_AEtFZ":{"name":"*(_:_:)","abstract":"<p>Elementwise matrix multiplication</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE5conv2yACyxGAEF":{"name":"conv2(_:)","abstract":"<p>2D convolution with numeric elements</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6extendyACyxGAEF":{"name":"extend(_:)","abstract":"<p>Extend conv2 matrix with a given kernel</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6dilateyACyxGAEF":{"name":"dilate(_:)","abstract":"<p>Extend and dilate conv2 matrix with a given kernel</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASjRzrlE6invert3maxACyxGx_tF":{"name":"invert(max:)","abstract":"<p>Recode the matrix values by subtracting them from a given maximum value</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlE11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of a game board</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlEyACyADGSgSScfc":{"name":"init(_:)","abstract":"<p>Create a game matrix from a string</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlE5words_5linesSaySaySSGGAA9DirectionO_SnySiGSgtF":{"name":"words(_:lines:)","abstract":"<p>Return the words written on the board</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:9Begriffix6MatrixVAASJSgRszrlE5words_5lines6aroundSaySSGAA9DirectionO_SnySiGSgSiSgtF":{"name":"words(_:lines:around:)","abstract":"<p>Return the words written on the board</p>","parent_name":"Matrix"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1mSivp":{"name":"m","abstract":"<p>The number of rows (m) and columns (n) in the matrix</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1nSivp":{"name":"n","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5countSivp":{"name":"count","abstract":"<p>The number of elements in a grid with this size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create dimensions with given extends</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyACSicfc":{"name":"init(_:)","abstract":"<p>Create a size for a square shaped grid with a given sidelength</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyAcA9DirectionO_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Initialize a dimension from a direction and length</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV8containsySbAA8PositionVF":{"name":"contains(_:)","abstract":"<p>Indicates if the given position is in the matrix bounds</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5indexySiAA8PositionVF":{"name":"index(_:)","abstract":"<p>Return the 1D index corresponding to a grid position</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index3rowSnySiGSi_tF":{"name":"index(row:)","abstract":"<p>Return the 1D indices of a given row index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index6columns8StrideToVySiGSi_tF":{"name":"index(column:)","abstract":"<p>Return the 1D indices of a given column index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV5index_4sizeSaySnySiGGAA8PositionV_ACtF":{"name":"index(_:size:)","abstract":"<p>Return the corresponding 1D indices of a partial grid with a given size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV8positionyAA8PositionVSiF":{"name":"position(_:)","abstract":"<p>Return a 2D grid position corresponding to a 1D index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV9enumerateyyyAA8PositionVXEF":{"name":"enumerate(_:)","abstract":"<p>Loop through all row and column indices and execute a closure with the positions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Indicates if a grid size fits into another grid size","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Add two dimensions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract a dimension from another</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Add a dimension and a scalar</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Subtract a scalar from a dimension</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV11descriptionSSvp":{"name":"description","abstract":"<p>A textual representation as m:n</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Initialize from a description</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:9Begriffix10DimensionsV12arrayLiteralACSid_tcfc":{"name":"init(arrayLiteral:)","abstract":"<p>Initialize from an array literal</p>","parent_name":"Dimensions"},"Structs/Begriffix/Phase.html#/s:9BegriffixAAV5PhaseO10RestrictedyAdA9DirectionOcADmF":{"name":"Restricted(_:)","abstract":"<p>Players must write words with at least four characters, starting player must write horizontally, and opponent must write vertically</p>","parent_name":"Phase"},"Structs/Begriffix/Phase.html#/s:9BegriffixAAV5PhaseO7LiberalyA2DmF":{"name":"Liberal","abstract":"<p>Any words and directions are allowed</p>","parent_name":"Phase"},"Structs/Begriffix/Phase.html#/s:9BegriffixAAV5PhaseO8KnockOutyA2DmF":{"name":"KnockOut","abstract":"<p>not yet implemented</p>","parent_name":"Phase"},"Structs/Begriffix/Move.html#/s:9BegriffixAAV4MoveV5placeAA5PlaceVvp":{"name":"place","abstract":"<p>The place where the word should be written</p>","parent_name":"Move"},"Structs/Begriffix/Move.html#/s:9BegriffixAAV4MoveV4wordSSvp":{"name":"word","abstract":"<p>The word to write in this move</p>","parent_name":"Move"},"Structs/Begriffix/Move.html#/s:9BegriffixAAV4MoveV6placesSDyAA5PlaceVSaySSGGSgvp":{"name":"places","abstract":"<p>The collection which the move has been selected from</p>","parent_name":"Move"},"Structs/Begriffix/Move.html#/s:9BegriffixAAV4MoveV5place4word6placesAdA5PlaceV_SSSDyAISaySSGGSgtcfc":{"name":"init(place:word:places:)","abstract":"<p>Initialize a move with given values</p>","parent_name":"Move"},"Structs/Begriffix/Move.html":{"name":"Move","abstract":"<p>A begriffix move</p>","parent_name":"Begriffix"},"Structs/Begriffix/Phase.html":{"name":"Phase","abstract":"<p>game phases depending on the progress</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV12startLettersSays12StaticStringVGvpZ":{"name":"startLetters","abstract":"<p>Some human-generated start letters</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9Begriffix9BoardGameP5board0B0Qzvp":{"name":"board","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9Begriffix10DyadicGameP7starterAA6Player_pvp":{"name":"starter","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9Begriffix10DyadicGameP8opponentAA6Player_pvp":{"name":"opponent","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9Begriffix9BoardGameP4turnSivp":{"name":"turn","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9Begriffix9BoardGameP6playerAA6Player_pvp":{"name":"player","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV5endedSbvp":{"name":"ended","abstract":"<p>Indicates if the game has ended</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV5phaseAB5PhaseOvp":{"name":"phase","abstract":"<p>The current game phase which is derived from turn</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV12startLetters7starter8opponentABSaySaySJSgGG_AA6Player_pAaI_ptcfc":{"name":"init(startLetters:starter:opponent:)","abstract":"<p>Initialize a new begriffix game with given players</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV4nextAB_AB4MoveVtSgyF":{"name":"next()","abstract":"<p>Advance the game for one move</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV4scan9direction5countSayAA8PositionVGAA9DirectionO_SitF":{"name":"scan(direction:count:)","abstract":"<p>Return every position where words with given direction and length could be inserted</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV5words12orthogonalTo4wordSaySSGAA5PlaceV_SStF":{"name":"words(orthogonalTo:word:)","abstract":"<p>Return the words crossing the given place after inserting a given word</p>","parent_name":"Begriffix"},"Structs/Begriffix.html#/s:9BegriffixAAV8contains5placeSbAA5PlaceV_tF":{"name":"contains(place:)","abstract":"<p>Indicate if the given place is usable</p>","parent_name":"Begriffix"},"Structs/Begriffix.html":{"name":"Begriffix","abstract":"<p>A begriffix game</p>"},"Structs/Dimensions.html":{"name":"Dimensions","abstract":"<p>The size of a 2D grid</p>"},"Structs/Matrix.html":{"name":"Matrix","abstract":"<p>A generic matrix type</p>"},"Structs/Place.html":{"name":"Place","abstract":"<p>A place on a game board, where a word can be written</p>"},"Structs/Position.html":{"name":"Position","abstract":"<p>A position in a matrix</p>"},"Structs/RandomPlayer.html":{"name":"RandomPlayer","abstract":"<p>A Begriffix player</p>"},"Protocols/Player.html#/s:9Begriffix6PlayerP4deal4withA2AV4MoveVSgAF_tF":{"name":"deal(with:)","abstract":"<p>Undocumented</p>","parent_name":"Player"},"Protocols/DyadicGame.html#/s:9Begriffix10DyadicGameP7starterAA6Player_pvp":{"name":"starter","abstract":"<p>The player who starts the game</p>","parent_name":"DyadicGame"},"Protocols/DyadicGame.html#/s:9Begriffix10DyadicGameP8opponentAA6Player_pvp":{"name":"opponent","abstract":"<p>The responding player</p>","parent_name":"DyadicGame"},"Protocols/BoardGame.html#/s:9Begriffix9BoardGameP0B0Qa":{"name":"Board","abstract":"<p>A type that can act as a game board</p>","parent_name":"BoardGame"},"Protocols/BoardGame.html#/s:9Begriffix9BoardGameP4MoveQa":{"name":"Move","abstract":"<p>The move type of a game</p>","parent_name":"BoardGame"},"Protocols/BoardGame.html#/s:9Begriffix9BoardGameP5board0B0Qzvp":{"name":"board","abstract":"<p>A game board where values can be entered</p>","parent_name":"BoardGame"},"Protocols/BoardGame.html#/s:9Begriffix9BoardGameP4turnSivp":{"name":"turn","abstract":"<p>The turn counter</p>","parent_name":"BoardGame"},"Protocols/BoardGame.html#/s:9Begriffix9BoardGameP6playerAA6Player_pvp":{"name":"player","abstract":"<p>The current player</p>","parent_name":"BoardGame"},"Protocols/BoardGame.html":{"name":"BoardGame","abstract":"<p>A type that can act as a board game</p>"},"Protocols/DyadicGame.html":{"name":"DyadicGame","abstract":"<p>A type that can act as a dyadic board game</p>"},"Protocols/Player.html":{"name":"Player","abstract":"<p>Undocumented</p>"},"Extensions/RandomAccessCollection.html#/s:Sk9BegriffixSJSg7ElementRtzSi5IndexRtzrlE4word6aroundSSSgSi_tF":{"name":"word(around:)","abstract":"<p>Find the word in a sequence around a given index (nil if less than 3 letters)</p>","parent_name":"RandomAccessCollection"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE3sumACyF":{"name":"sum()","abstract":"<p>Return the sum of all elements in a numeric sequence</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE1moiySayACGx_xtFZ":{"name":"*(_:_:)","abstract":"<p>Multiply two sequences elementwise</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSj7ElementRpzrlE7prodSum3lhs3rhsACx_xtFZ":{"name":"prodSum(lhs:rhs:)","abstract":"<p>Multiply two sequences elementwise and sum up the products</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST9BegriffixSJSg7ElementRtzrlE5wordsSaySSGyF":{"name":"words()","abstract":"<p>Find the words in a sequence (at least 3 letters), separated by nil</p>","parent_name":"Sequence"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions/RandomAccessCollection.html":{"name":"RandomAccessCollection"},"Enums/Direction.html#/s:9Begriffix9DirectionO10HorizontalyA2CmF":{"name":"Horizontal","abstract":"<p>From left to right</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO8VerticalyA2CmF":{"name":"Vertical","abstract":"<p>from top to bottom</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO6kernelyAA6MatrixVySiGSiF":{"name":"kernel(_:)","abstract":"<p>Return a kernel according to this direction and a given length</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO7toggledACyF":{"name":"toggled()","abstract":"<p>The opposite of this direction</p>","parent_name":"Direction"},"Enums/Direction.html#/s:9Begriffix9DirectionO6toggleyyF":{"name":"toggle()","abstract":"<p>Set this direction to its opposite</p>","parent_name":"Direction"},"Enums/Direction.html":{"name":"Direction","abstract":"<p>The direction on a right-angled grid</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}