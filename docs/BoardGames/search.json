{"Structs/Position.html#/s:10BoardGames8PositionV1iSivp":{"name":"i","abstract":"<p>The matrix indices for row (i) and column (j)</p>","parent_name":"Position"},"Structs/Position.html#/s:10BoardGames8PositionV1jSivp":{"name":"j","parent_name":"Position"},"Structs/Position.html#/s:10BoardGames8PositionVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create a position with given indices</p>","parent_name":"Position"},"Structs/Matrix.html#/s:10BoardGames6MatrixV14CollectionTypea":{"name":"CollectionType","abstract":"<p>The type of the collection which is used internally for the matrix entries</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV4Sizea":{"name":"Size","abstract":"<p>A type which keeps track of matrix dimensions and 1D indices</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV4sizeAA10DimensionsVvp":{"name":"size","abstract":"<p>The matrix dimensions</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVyACyxGSaySayxGGcfc":{"name":"init(_:)","abstract":"<p>Create matrix from nested arrays</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV9repeating4sizeACyxGx_AA10DimensionsVtcfc":{"name":"init(repeating:size:)","abstract":"<p>Create matrix with given size and prefill with repeating value</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV_4sizeACyxGSayxG_AA10DimensionsVtcfc":{"name":"init(_:size:)","abstract":"<p>Create matrix from simple array and given size</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV5Indexa":{"name":"Index","abstract":"<p>The collection index type</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV7Elementa":{"name":"Element","abstract":"<p>The type of collection elements</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV8endIndexSivp":{"name":"endIndex","abstract":"<p>The last 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVyxSicip":{"name":"subscript(_:)","abstract":"<p>Access a matrix element at a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Return the 1D index after a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV5index6beforeS2i_tF":{"name":"index(before:)","abstract":"<p>Return the 1D index before a given 1D index</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVyxAA8PositionVcip":{"name":"subscript(_:)","abstract":"<p>Return the matrix element at a given position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV3rows5SliceVyACyxGGSi_tcip":{"name":"subscript(row:)","abstract":"<p>Return the elements in a given matrix row as slice</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixV6columnSayxGSi_tcip":{"name":"subscript(column:)","abstract":"<p>Return the elements at a given column index as array</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVySays5SliceVyACyxGGGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with a given size and reference position</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVySayxGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with given size and start position as array</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVyACyxGAA8PositionV_AA10DimensionsVtcip":{"name":"subscript(_:_:)","abstract":"<p>Return a matrix slice with given size and start position as matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVAAs7NumericRzlE5conv2_6extendACyxGAG_SbtF":{"name":"conv2(_:extend:)","abstract":"<p>2D convolution with numeric elements</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVA2A6EntityRzlE11descriptionSSvp":{"name":"description","abstract":"<p>A textual description of a game board</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:10BoardGames6MatrixVA2A6EntityRzlEyACyxGSgSScfc":{"name":"init(_:)","abstract":"<p>Create a game matrix from a string</p>","parent_name":"Matrix"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1mSivp":{"name":"m","abstract":"<p>The number of rows (m) and columns (n) in the matrix</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1nSivp":{"name":"n","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV5countSivp":{"name":"count","abstract":"<p>The number of elements in a grid with this size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsVyACSi_Sitcfc":{"name":"init(_:_:)","abstract":"<p>Create dimensions with given extends</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsVyACSicfc":{"name":"init(_:)","abstract":"<p>Create a size for a square shaped grid with a given sidelength</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV8containsySbAA8PositionVF":{"name":"contains(_:)","abstract":"<p>Indicates if the given position is in the matrix bounds</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV5indexySiAA8PositionVF":{"name":"index(_:)","abstract":"<p>Return the 1D index corresponding to a grid position</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV5index3rows5RangeVySiGSi_tF":{"name":"index(row:)","abstract":"<p>Return the 1D indices of a given row index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV5index6columns8StrideToVySiGSi_tF":{"name":"index(column:)","abstract":"<p>Return the 1D indices of a given column index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV5index_4sizeSays5RangeVySiGGAA8PositionV_ACtF":{"name":"index(_:size:)","abstract":"<p>Return the corresponding 1D indices of a partial grid with a given size</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV8positionyAA8PositionVSiF":{"name":"position(_:)","abstract":"<p>Return a 2D grid position corresponding to a 1D index</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV9enumerateyyyAA8PositionVXEF":{"name":"enumerate(_:)","abstract":"<p>Loop through all row and column indices and execute a closure with the positions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Indicates if a grid size fits into another grid size","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Add two dimensions</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract a dimension from another</p>","parent_name":"Dimensions"},"Structs/Dimensions.html#/s:10BoardGames10DimensionsV1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Add a dimension and a scalar</p>","parent_name":"Dimensions"},"Structs/Dimensions.html":{"name":"Dimensions","abstract":"<p>The size of a 2D grid</p>"},"Structs/Matrix.html":{"name":"Matrix","abstract":"<p>A generic matrix type</p>"},"Structs/Position.html":{"name":"Position","abstract":"<p>A position in a matrix</p>"},"Protocols/Entity.html#/s:10BoardGames6EntityP6symbols9CharacterVvp":{"name":"symbol","abstract":"<p>A one character representation of the entity for printing board matrices</p>","parent_name":"Entity"},"Protocols/Entity.html#/s:10BoardGames6EntityP8isFilledSbvp":{"name":"isFilled","abstract":"<p>Indicates if the entity is set or not set</p>","parent_name":"Entity"},"Protocols/Entity.html#/s:10BoardGames6EntityP4fromxs9CharacterV_tcfc":{"name":"init(from:)","abstract":"<p>Create an entity from a one-character representation</p>","parent_name":"Entity"},"Protocols/Entity.html":{"name":"Entity","abstract":"<p>A protocol for types that can be used as game entities in board matrices</p>"},"Extensions/Sequence.html#/s:s8SequenceP10BoardGamess7Numeric7ElementRpzrlE3sumAFyF":{"name":"sum()","abstract":"<p>Return the sum of all elements in a numeric sequence</p>","parent_name":"Sequence"},"Extensions/Optional.html#/s:Sq10BoardGamess9CharacterVRszlE6symbolACvp":{"name":"symbol","abstract":"<p>Optional characters are printed as themselves or dots (nil)</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq10BoardGamess9CharacterVRszlE8isFilledSbvp":{"name":"isFilled","abstract":"<p>A nil character indicates an empty field, the entity is not set</p>","parent_name":"Optional"},"Extensions/Optional.html#/s:Sq10BoardGamess9CharacterVRszlE4fromACSgAC_tcfc":{"name":"init(from:)","abstract":"<p>Create board matrix from character symbols, converting dots to nil</p>","parent_name":"Optional"},"Extensions/Bool.html#/s:Sb10BoardGamesE6symbols9CharacterVvp":{"name":"symbol","abstract":"<p>If booleans are sufficient for games, they are represented as squares (true) or dots (false)</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb10BoardGamesE8isFilledSbvp":{"name":"isFilled","abstract":"<p>If an entity is true, it is set</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb10BoardGamesE4fromSbs9CharacterV_tcfc":{"name":"init(from:)","abstract":"<p>create a board matrix from symbols</p>","parent_name":"Bool"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}